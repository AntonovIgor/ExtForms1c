
Функция СведенияОВнешнейОбработке() Экспорт
	
    ПараметрыРегистрации = Новый Структура;
	// Строка, вид обработки, один из возможных: «ДополнительнаяОбработка», «ДополнительныйОтчет», «ЗаполнениеОбъекта», «Отчет», «ПечатнаяФорма» или «СозданиеСвязанныхОбъектов»
    ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	// Массив строк имен объектов метаданных в формате: <ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. Например, «Документ.СчетЗаказ» или «Справочник.*»
	Назначения = Новый Массив;
	Назначения.Добавить("Документ.ПриемНаРаботу");
	Назначения.Добавить("Документ.ПриемНаРаботуСписком");
    ПараметрыРегистрации.Вставить("Назначение", Назначения);
	// Наименование обработки, которым будет заполнено наименование элемента справочника, краткое описание для идентификации обработки администратором
    ПараметрыРегистрации.Вставить("Наименование", "Печать приказа о приеме Т-1 с надбавками");
	// Версия обработки в формате <старший номер>.<младший номер> используется при загрузке обработок в информационную базу. Например, 1.0
    ПараметрыРегистрации.Вставить("Версия", "1.0");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	// Краткая информация по обработке, описание обработки
    ПараметрыРегистрации.Вставить("Информация", "Приказ о приеме (форма Т-1) с надбавками");
    ПараметрыРегистрации.Вставить("ВерсияБСП", "2.3.1.83");
	Команды = ТаблицаКоманд();
	ДобавитьКоманду(Команды,
	                "Приказ о приеме (форма Т-1) с надбавками",
	                "ПечатьТ1Надбавки",
	                ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода(),
	                Ложь,
	                "ПечатьMXL",
					"ПФ_MXL_Т1,ПФ_MXL_Т1а");
	ПараметрыРегистрации.Вставить("Команды", Команды);
	
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ТаблицаКоманд()
	
    Команды = Новый ТаблицаЗначений;
    Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
    Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
    Команды.Колонки.Добавить("ЗаменяемыеКоманды", Новый ОписаниеТипов("Строка"));
    Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "", ЗаменяемыеКоманды = "")
	
    НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
	НоваяКоманда.ЗаменяемыеКоманды = ЗаменяемыеКоманды;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
    ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПечатьТ1Надбавки");
    Если ПечатнаяФорма <> Неопределено Тогда
        ПечатнаяФорма.ТабличныйДокумент = СформироватьПриказОПриеме(МассивОбъектов, ОбъектыПечати);
        ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Приказ о приеме (форма Т-1) с надбавками'");
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПриказОПриеме(МассивОбъектов, ОбъектыПечати)
	
    ТабличныйДокумент = Новый ТабличныйДокумент;
	//....
    Возврат ТабличныйДокумент;
	
КонецФункции
