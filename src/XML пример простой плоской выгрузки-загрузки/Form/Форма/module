
Перем мДолжности, мГрафики, мВидыРасчета;

////////////////////////////////////////////////////////////////////////////////
// ВЫГРУЗКА ИЗ УПР

Процедура ВыгрузитьНажатие(Элемент)
	
	//создание файла
	ФайлXML = Новый Файл(ФайлВыгрузки);
	Если (ФайлXML.Существует()) Тогда
		УдалитьФайлы(ФайлXML.ПолноеИмя);
	Иначе
		СоздатьКаталог(ФайлXML.Путь);
	КонецЕсли;
	
	ФайлXML = Новый ЗаписьXML;
	Попытка
		ФайлXML.ОткрытьФайл(ФайлВыгрузки);
		ФайлXML.ЗаписатьОбъявлениеXML();
	Исключение
		Возврат;
	КонецПопытки;
	Если ФайлXML = Неопределено Тогда
		Сообщить("Ошибка в момент создания файла выгрузки!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	//данные
	ФайлXML.ЗаписатьНачалоЭлемента("ДанныеВыгрузки");
	
	Режим = 0;
	Выборка = СформироватьЗапрос();
	Пока Выборка.Следующий() Цикл
		ЭлементСсылка = Выборка.Ссылка;
		ФайлXML.ЗаписатьНачалоЭлемента("Должность");
		ФайлXML.ЗаписатьАтрибут("Предопределенный", ?(ЭлементСсылка.Предопределенный, "1", "0"));
		ФайлXML.ЗаписатьАтрибут("ИмяПредопределенного", ?(ЭлементСсылка.Предопределенный, Справочники.ДолжностиОрганизаций.ПолучитьИмяПредопределенного(ЭлементСсылка), ""));
		ФайлXML.ЗаписатьАтрибут("ИД", Строка(ЭлементСсылка.УникальныйИдентификатор()));
		ФайлXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	Режим = 1;
	Выборка = СформироватьЗапрос();
	Пока Выборка.Следующий() Цикл
		ЭлементСсылка = Выборка.Ссылка;
		ФайлXML.ЗаписатьНачалоЭлемента("График");
		ФайлXML.ЗаписатьАтрибут("Предопределенный", ?(ЭлементСсылка.Предопределенный, "1", "0"));
		ФайлXML.ЗаписатьАтрибут("ИмяПредопределенного", ?(ЭлементСсылка.Предопределенный, Справочники.ГрафикиРаботы.ПолучитьИмяПредопределенного(ЭлементСсылка), ""));
		ФайлXML.ЗаписатьАтрибут("ИД", Строка(ЭлементСсылка.УникальныйИдентификатор()));
		ФайлXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	Режим = 2;
	Выборка = СформироватьЗапрос();
	Пока Выборка.Следующий() Цикл
		ЭлементСсылка = Выборка.Ссылка;
		ФайлXML.ЗаписатьНачалоЭлемента("ВидРасчета");
		ФайлXML.ЗаписатьАтрибут("Предопределенный", ?(ЭлементСсылка.Предопределенный, "1", "0"));
		ФайлXML.ЗаписатьАтрибут("ИмяПредопределенного", ?(ЭлементСсылка.Предопределенный, ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьИмяПредопределенного(ЭлементСсылка), ""));
		ФайлXML.ЗаписатьАтрибут("ИД", Строка(ЭлементСсылка.УникальныйИдентификатор()));
		ФайлXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
	
	ФайлXML.ЗаписатьКонецЭлемента();
	ФайлXML.Закрыть();
	
КонецПроцедуры

Процедура ФайлВыгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.ПолноеИмяФайла = ФайлВыгрузки;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	ДиалогВыбораФайла.Фильтр = "Файлы выгрузки(*.xml)|*.xml|Все файлы (*.*)|*.*";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлВыгрузки = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОВЕРКА И УДАЛЕНИЕ В ФИН

Процедура ПрочитатьДанныеУПР()
	
	мДолжности = Новый Массив;
	мГрафики = Новый Массив;
	мВидыРасчета = Новый Массив;
	
	Файл = Новый Файл(ФайлВыгрузки);
	Если НЕ Файл.Существует() ИЛИ Файл.ЭтоКаталог() Тогда
		Возврат;
	КонецЕсли;
	ФайлXML = Новый ЧтениеXML;
	Попытка
		ФайлXML.ОткрытьФайл(ФайлВыгрузки);
	Исключение
		Сообщить("Не удалось открыть файл загрузки: "+ОписаниеОшибки(),СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	Если ФайлXML = Неопределено Тогда
		Сообщить("Ошибка при открытии файла загрузки!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Пока ФайлXML.Прочитать() Цикл
		
		// Чтение "шапки" файла
		Если ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ФайлXML.Имя = "ДанныеВыгрузки" Тогда
			Прервать; // Конец файла выгрузки
		КонецЕсли;
		
		// Чтение данных
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "Должность" Тогда
			
			Предопределенный = Ложь;
			Имя = "";
			СсылкаЭлемента = "";
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.ЛокальноеИмя = "Предопределенный" Тогда
					Предопределенный = (ФайлXML.Значение = "1");
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИмяПредопределенного" Тогда
					Имя = ФайлXML.Значение;
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИД" Тогда
					СсылкаЭлемента = Справочники.Должности.ПолучитьСсылку(Новый УникальныйИдентификатор(ФайлXML.Значение));
				КонецЕсли;
			КонецЦикла;
			
			Если Предопределенный Тогда
				мДолжности.Добавить(Справочники.Должности[Имя]);
			Иначе
				мДолжности.Добавить(СсылкаЭлемента);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "График" Тогда
			
			Предопределенный = Ложь;
			Имя = "";
			СсылкаЭлемента = "";
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.ЛокальноеИмя = "Предопределенный" Тогда
					Предопределенный = (ФайлXML.Значение = "1");
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИмяПредопределенного" Тогда
					Имя = ФайлXML.Значение;
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИД" Тогда
					СсылкаЭлемента = Справочники.ГрафикиРаботы.ПолучитьСсылку(Новый УникальныйИдентификатор(ФайлXML.Значение));
				КонецЕсли;
			КонецЦикла;
			
			Если Предопределенный Тогда
				мГрафики.Добавить(Справочники.ГрафикиРаботы[Имя]);
			Иначе
				мГрафики.Добавить(СсылкаЭлемента);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "ВидРасчета" Тогда
			
			Предопределенный = Ложь;
			Имя = "";
			СсылкаЭлемента = "";
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.ЛокальноеИмя = "Предопределенный" Тогда
					Предопределенный = (ФайлXML.Значение = "1");
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИмяПредопределенного" Тогда
					Имя = ФайлXML.Значение;
				КонецЕсли;
				Если ФайлXML.ЛокальноеИмя = "ИД" Тогда
					СсылкаЭлемента = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПолучитьСсылку(Новый УникальныйИдентификатор(ФайлXML.Значение));
				КонецЕсли;
			КонецЦикла;
			
			Если Предопределенный Тогда
				мВидыРасчета.Добавить(ПланыВидовРасчета.ОсновныеНачисленияОрганизаций[Имя]);
			Иначе
				мВидыРасчета.Добавить(СсылкаЭлемента);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ФайлXML.Закрыть();
	
КонецПроцедуры

Процедура КоманднаяПанель1УдалитьОтмеченные(Кнопка)
	
	Для Каждого СтрокаТаб Из ТаблицаДанных Цикл
		
		Если НЕ СтрокаТаб.Обрабатывать Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент = СтрокаТаб.Значение;
		
		Если ТипЗнч(Элемент) = Тип("СправочникСсылка.ДолжностиОрганизаций") Тогда
			
			Если Элемент.Актуальность Тогда
				Объект = Элемент.ПолучитьОбъект();
				Объект.Актуальность = Ложь;
				Объект.ОбменДанными.Загрузка = Истина;
				Попытка
					Объект.Записать();
					СтрокаТаб.Обрабатывать = Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Элемент) = Тип("СправочникСсылка.ГрафикиРаботы") ИЛИ ТипЗнч(Элемент) = Тип("ПланВидовРасчетаСсылка.ОсновныеНачисленияОрганизаций") Тогда
			
			Если (НЕ Элемент.ПометкаУдаления ИЛИ НРег(Лев(Элемент.Наименование, 2)) <> "яя") И НЕ Элемент.Предопределенный Тогда
				Объект = Элемент.ПолучитьОбъект();
				Объект.ПометкаУдаления = Истина;
				Объект.Наименование = "яя" + Объект.Наименование;
				Попытка
					Объект.Записать();
					СтрокаТаб.Обрабатывать = Ложь;
				Исключение
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонПериода));
	
	Если Режим < 2 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник,
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделениеЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ОбособленноеПодразделение
		|	КОНЕЦ КАК Организация,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|	КОНЕЦ КАК Подразделение,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ДолжностьЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Должность
		|	КОНЕЦ КАК Должность,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавокЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавок
		|	КОНЕЦ КАК ЗанимаемыхСтавок,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы
		|	КОНЕЦ КАК ГрафикРаботы
		|ПОМЕСТИТЬ АктуальныеСотрудники
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&НачалоПериода, ) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник,
		|	РаботникиОрганизаций.Сотрудник.Физлицо,
		|	РаботникиОрганизаций.ОбособленноеПодразделение,
		|	РаботникиОрганизаций.ПодразделениеОрганизации,
		|	РаботникиОрганизаций.Должность,
		|	РаботникиОрганизаций.ЗанимаемыхСтавок,
		|	РаботникиОрганизаций.ГрафикРаботы
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаботникиОрганизаций.Сотрудник,
		|	РаботникиОрганизаций.Сотрудник.Физлицо,
		|	РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения,
		|	РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения,
		|	РаботникиОрганизаций.ДолжностьЗавершения,
		|	РаботникиОрганизаций.ЗанимаемыхСтавокЗавершения,
		|	РаботникиОрганизаций.ГрафикРаботыЗавершения
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|ГДЕ
		|	РаботникиОрганизаций.ПериодЗавершения МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РаботникиОрганизаций.ПричинаИзмененияСостоянияЗавершения <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|	И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|;";
		
		Если Режим = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДолжностиОрганизаций.Ссылка
			|ИЗ
			|	Справочник.ДолжностиОрганизаций КАК ДолжностиОрганизаций
			|ГДЕ
			|	//Доп условие
			|	ДолжностиОрганизаций.Ссылка В
			|				(ВЫБРАТЬ
			|					АктуальныеСотрудники.Должность
			|				ИЗ
			|					АктуальныеСотрудники КАК АктуальныеСотрудники)
			|	И ДолжностиОрганизаций.Актуальность
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДолжностиОрганизаций.Наименование
			|;";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ГрафикиРаботы.Ссылка
			|ИЗ
			|	Справочник.ГрафикиРаботы КАК ГрафикиРаботы
			|ГДЕ
			|	//Доп условие
			|	ГрафикиРаботы.Ссылка В
			|				(ВЫБРАТЬ
			|					АктуальныеСотрудники.ГрафикРаботы
			|				ИЗ
			|					АктуальныеСотрудники КАК АктуальныеСотрудники)";
			
		КонецЕсли;
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|				И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|			ТОГДА ПлановыеНачисленияСрезПоследних.ВидРасчетаЗавершения
		|		ИНАЧЕ ПлановыеНачисленияСрезПоследних.ВидРасчета
		|	КОНЕЦ КАК ВидРасчета
		|ПОМЕСТИТЬ АктуальныеВидыРасчета
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&НачалоПериода, ) КАК ПлановыеНачисленияСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ПлановыеНачисленияСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|					И ПлановыеНачисленияСрезПоследних.ПериодЗавершения <= &НачалоПериода
		|				ТОГДА ПлановыеНачисленияСрезПоследних.ДействиеЗавершения
		|			ИНАЧЕ ПлановыеНачисленияСрезПоследних.Действие
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ВидРасчета
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПлановыеНачисления.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПлановыеНачисления.ВидРасчетаЗавершения
		|ИЗ
		|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК ПлановыеНачисления
		|ГДЕ
		|	ПлановыеНачисления.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|	И ПлановыеНачисления.ПериодЗавершения МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПлановыеНачисления.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|ГДЕ
		|	(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|			ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияНачало МЕЖДУ &НачалоПериода И &КонецПериода
		|			ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ПериодДействияКонец МЕЖДУ &НачалоПериода И &КонецПериода)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	//Доп условие
		|	ОсновныеНачисленияОрганизаций.Ссылка В
		|				(ВЫБРАТЬ
		|					АктуальныеВидыРасчета.ВидРасчета
		|				ИЗ
		|					АктуальныеВидыРасчета КАК АктуальныеВидыРасчета)";
		
	КонецЕсли;
	
	Если НЕ ЭтоУПР Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//Доп условие", "НЕ");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если ТаблицаДанных.Количество() > 0 Тогда
		Ответ = Вопрос("Перед заполнением таблица будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, "Заполнение данных");
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		ТаблицаДанных.Очистить();
	КонецЕсли;
	
	ПрочитатьДанныеУПР();
	
	Выборка = СформироватьЗапрос();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Ссылка.Предопределенный Тогда
			Продолжить;
		КонецЕсли;
		
		Если Режим = 0 Тогда
			Если НЕ Выборка.Ссылка.Актуальность Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если Выборка.Ссылка.ПометкаУдаления И НРег(Лев(Выборка.Ссылка.Наименование, 2)) = "яя" Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДанных.Добавить();
		НоваяСтрока.Значение = Выборка.Ссылка;
		
		Если Режим = 0 Тогда
			НоваяСтрока.ИспользуетсяУПР = (мДолжности.Найти(Выборка.Ссылка) <> Неопределено);
		ИначеЕсли Режим = 1 Тогда
			НоваяСтрока.ИспользуетсяУПР = (мГрафики.Найти(Выборка.Ссылка) <> Неопределено);
		ИначеЕсли Режим = 2 Тогда
			НоваяСтрока.ИспользуетсяУПР = (мВидыРасчета.Найти(Выборка.Ссылка) <> Неопределено);
		КонецЕсли;
		
		НоваяСтрока.Обрабатывать = НЕ НоваяСтрока.ИспользуетсяУПР;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель2УстановитьВсе(Кнопка)
	
	Для Каждого СтрокаТаб Из ТаблицаДанных Цикл
		СтрокаТаб.Обрабатывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель2СнятьВсе(Кнопка)
	
	Для Каждого СтрокаТаб Из ТаблицаДанных Цикл
		СтрокаТаб.Обрабатывать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура ФайлЗагрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПолноеИмяФайла = ФайлВыгрузки;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Выбор файла'");
	ДиалогВыбораФайла.Фильтр = "Файлы выгрузки(*.xml)|*.xml|Все файлы (*.*)|*.*";
	ДиалогВыбораФайла.ИндексФильтра = 0;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ФайлВыгрузки = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаДанныхПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ИспользуетсяУПР Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.РозовоКоричневый;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭтоУПР = нвОбменДаннымиПолныеПраваПовтИсп.ЭтоБазаУпр();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоУПР Тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.УПР;
		ЭлементыФормы.КоманднаяПанельФИН.Кнопки.Заполнить.Доступность = Ложь;
		ЭлементыФормы.КоманднаяПанельФИН.Кнопки.УдалитьОтмеченные.Доступность = Ложь;
	Иначе
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы.ФИН;
	КонецЕсли;
	
КонецПроцедуры
