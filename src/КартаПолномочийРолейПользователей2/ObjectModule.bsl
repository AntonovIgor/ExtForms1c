
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОЛУЧЕНИЯ ОПИСАНИЙ ПОЛНОМОЧИЙ НА ОБЪЕКТЫ

Функция ПолучитьСтруктуруТаблицы(ТипТаблицы)
	
	ОбъявлениеТаблицы = Новый ТаблицаЗначений;
	
	Если ТипТаблицы = "Доступы" Тогда
		ОбъявлениеТаблицы.Колонки.Добавить("ВидМетаданных");
		ОбъявлениеТаблицы.Колонки.Добавить("ПравоДоступа");
		ОбъявлениеТаблицы.Колонки.Добавить("Представление");
		ОбъявлениеТаблицы.Колонки.Добавить("ПоддерживаетОграничения", Новый ОписаниеТипов("Булево"));
	ИначеЕсли ТипТаблицы = "Метаданные" Тогда
		ОбъявлениеТаблицы.Колонки.Добавить("Имя");
		ОбъявлениеТаблицы.Колонки.Добавить("Представление");
		ОбъявлениеТаблицы.Колонки.Добавить("ЗаголовокШапки");
	КонецЕсли;
	
	Возврат ОбъявлениеТаблицы;
	
КонецФункции

Процедура ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, ВидМетаданных, ПравоДоступа, Представление = "", ПоддерживаетОграничения = Ложь)
	
	НоваяСтрока = ТаблицаВидовДоступа.Добавить();
	НоваяСтрока.ВидМетаданных = ВидМетаданных;
	НоваяСтрока.ПравоДоступа  = ПравоДоступа;
	НоваяСтрока.Представление = ?(ПустаяСтрока(Представление), ПравоДоступа, Представление);
	НоваяСтрока.ПоддерживаетОграничения = ПоддерживаетОграничения;
	
КонецПроцедуры

Процедура ДобавитьСтрокуВТаблицуМетаданных(ТаблицаМетаданных, Имя, Представление, ЗаголовокШапки)
	
	НоваяСтрока = ТаблицаМетаданных.Добавить();
	НоваяСтрока.Имя            = Имя;
	НоваяСтрока.Представление  = Представление;
	НоваяСтрока.ЗаголовокШапки = ЗаголовокШапки;
	
КонецПроцедуры

Функция ТаблицаПравКонфигурация()
	
	ТаблицаВидовДоступа = ПолучитьСтруктуруТаблицы("Доступы");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "Администрирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "АдминистрированиеДанных", "Админ-ие данных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ОбновлениеКонфигурацииБазыДанных", "Обновление конфигурации БД");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "МонопольныйРежим", "Монопольный режим");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "АктивныеПользователи", "Активные пользователи");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ЖурналРегистрации", "Журнал регистрации");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ТонкийКлиент", "Тонкий клиент");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ВебКлиент", "Веб-клиент");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ТолстыйКлиент", "Толстый клиент");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ВнешнееСоединение", "Внешнее соединение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "Automation");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "РежимВсеФункции", "Режим 'Все функции'");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "СохранениеДанныхПользователя", "Сохранение данных пользователя");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ИнтерактивноеОткрытиеВнешнихОтчетов", "Открытие внешних отчетов");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "ИнтерактивноеОткрытиеВнешнихОбработок", "Открытие внешних обработок");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "Вывод");
	
	Если ВерсияПлатформы8_3_6 Тогда
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Конфигурация", "АдминистрированиеРасширенийКонфигурации", "Админ-ие расширений конф.");
	КонецЕсли;
	
	Возврат ТаблицаВидовДоступа;
	
КонецФункции

Функция ТаблицаПравОбщие()
	
	//Метаданные.ВнешниеИсточникиДанных
	
	// ОПИСАНИЕ МЕТАДАННЫХ
	ТаблицаОбъектовМетаданных = ПолучитьСтруктуруТаблицы("Метаданные");
	// Общие объекты
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Подсистемы", "Подсистемы", "Подсистема");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПараметрыСеанса", "Параметры сеанса", "Параметр сеанса");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ОбщиеРеквизиты", "Общие реквизиты", "Общий реквизит");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПланыОбмена", "Планы обмена", "План обмена");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "КритерииОтбора", "Критерии отбора", "Критерий отбора");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ОбщиеФормы", "Общие формы", "Общая форма");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ОбщиеКоманды", "Общие команды", "Общая команда");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Интерфейсы", "Интерфейсы", "Интерфейс");
	
	// Основные объекты
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Константы", "Константы", "Константа");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Справочники", "Справочники", "Вид справочника");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Документы", "Документы", "Вид документа");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Последовательности", "Последовательности", "Последовательность");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ЖурналыДокументов", "Журналы документов", "Журнал документов");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "РегистрыСведений", "Регистры сведений", "Вид регистра");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "РегистрыНакопления", "Регистры накопления", "Вид регистра");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "РегистрыБухгалтерии", "Регистры бухгалтерии", "Вид регистра");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "РегистрыРасчета", "Регистры расчета", "Вид регистра");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПланыСчетов", "Планы счетов", "План счетов");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПланыВидовХарактеристик", "Планы видов характеристик", "ПВХ");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПланыВидовРасчета", "Планы видов расчета", "ПВР");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ПланыОбмена", "Планы обмена", "План обмена");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "БизнесПроцессы", "Бизнес-процессы", "Бизнес-процесс");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Задачи", "Задачи", "Задача");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Отчеты", "Отчеты", "Отчет");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "Обработки", "Обработки", "Обработка");
	ДобавитьСтрокуВТаблицуМетаданных(ТаблицаОбъектовМетаданных, "ВнешниеИсточникиДанных", "Внешние источники данных", "Внешний источник данных");
	
	// ОПИСАНИЕ ВИДОВ ДОСТУПА
	ТаблицаВидовДоступа = ПолучитьСтруктуруТаблицы("Доступы");
	// Общие объекты
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Подсистемы", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПараметрыСеанса", "Получение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПараметрыСеанса", "Установка");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ОбщиеРеквизиты", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ОбщиеРеквизиты", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Интерфейсы", "Использование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "КритерииОтбора", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ОбщиеФормы", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ОбщиеКоманды", "Просмотр");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ИнтерактивноеДобавление", "Интеракт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ИнтерактивноеУдаление", "Интеракт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ИнтерактивнаяПометкаУдаления", "Интеракт. пометка удаления");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ИнтерактивноеСнятиеПометкиУдаления", "Интеракт. снятие пометки удаления");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ИнтерактивноеУдалениеПомеченных", "Интеракт. удаление помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыОбмена", "ВводПоСтроке", "Ввод по строке");
	
	// Основные объекты
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Константы", "Чтение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Константы", "Изменение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Константы", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Константы", "Редактирование");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ВводПоСтроке", "Ввод по строке");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Проведение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ОтменаПроведения", "Отм. проведения");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеПроведение", "Инт. проведение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеПроведениеНеОперативное", "Инт. проведение неопер.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивнаяОтменаПроведения", "Инт. отм. проведения");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ИнтерактивноеИзменениеПроведенных", "Инт. изм. проведенных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Документы", "ВводПоСтроке", "Ввод по строке");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Последовательности", "Чтение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Последовательности", "Изменение");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ЖурналыДокументов", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ЖурналыДокументов", "Просмотр");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыСведений", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыСведений", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыСведений", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыСведений", "Редактирование");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыНакопления", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыНакопления", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыНакопления", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыНакопления", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыНакопления", "УправлениеИтогами", "Управление итогами");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыБухгалтерии", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыБухгалтерии", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыБухгалтерии", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыБухгалтерии", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыБухгалтерии", "УправлениеИтогами", "Управление итогами");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыРасчета", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыРасчета", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыРасчета", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыРасчета", "Редактирование");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ВводПоСтроке", "Ввод по строке");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ВводПоСтроке", "Ввод по строке");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ВводПоСтроке", "Ввод по строке");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ВводПоСтроке", "Ввод по строке");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивнаяАктивация", "Инт. активация");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "Старт");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "БизнесПроцессы", "ИнтерактивныйСтарт", "Инт. старт");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Чтение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Добавление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Изменение", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Удаление", , Истина);
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Просмотр");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивноеДобавление", "Инт. добавление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Редактирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивноеУдаление", "Инт. удаление");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивнаяПометкаУдаления", "Инт. пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивноеСнятиеПометкиУдаления", "Инт. снятие пом. удал.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивноеУдалениеПомеченных", "Инт. удал. помеченных");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ВводПоСтроке", "Ввод по строке");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивнаяАктивация", "Инт. активация");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "Выполнение");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Задачи", "ИнтерактивноеВыполнение", "Инт. выполнение");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Отчеты", "Использование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Отчеты", "Просмотр");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Обработки", "Использование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Обработки", "Просмотр");
	
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ВнешниеИсточникиДанных", "Использование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ВнешниеИсточникиДанных", "Администрирование");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ВнешниеИсточникиДанных", "ИзменениеСтандартнойАутентификации", "Изм. стандартной аутентиф.");
	ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ВнешниеИсточникиДанных", "ИзменениеСтандартнойАутентификацииСеанса", "Изм. стандартной аутентиф. сеанса");
	
	Если ВерсияПлатформы8_3 Тогда
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "РегистрыСведений", "УправлениеИтогами", "Управление итогами");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ВнешниеИсточникиДанных", "ИзменениеАутентификацииОССеанса", "Изм. аутентиф. ОС сеанса");
	КонецЕсли;
	
	Если ВерсияПлатформы8_3_3 Тогда
		
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеУдалениеПредопределенныхДанных", "Инт. удаление предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивнаяПометкаУдаленияПредопределенныхДанных", "Инт. пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных", "Инт. снятие пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "Справочники", "ИнтерактивноеУдалениеПомеченныхПредопределенныхДанных", "Инт. удал. помеченных предопр.");
		
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеУдалениеПредопределенныхДанных", "Инт. удаление предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивнаяПометкаУдаленияПредопределенныхДанных", "Инт. пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных", "Инт. снятие пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыСчетов", "ИнтерактивноеУдалениеПомеченныхПредопределенныхДанных", "Инт. удал. помеченных предопр.");
		
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеУдалениеПредопределенныхДанных", "Инт. удаление предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивнаяПометкаУдаленияПредопределенныхДанных", "Инт. пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных", "Инт. снятие пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовХарактеристик", "ИнтерактивноеУдалениеПомеченныхПредопределенныхДанных", "Инт. удал. помеченных предопр.");
		
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеУдалениеПредопределенныхДанных", "Инт. удаление предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивнаяПометкаУдаленияПредопределенныхДанных", "Инт. пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеСнятиеПометкиУдаленияПредопределенныхДанных", "Инт. снятие пом. удал. предопр.");
		ДобавитьСтрокуВТаблицуВидовДоступа(ТаблицаВидовДоступа, "ПланыВидовРасчета", "ИнтерактивноеУдалениеПомеченныхПредопределенныхДанных", "Инт. удал. помеченных предопр.");
		
	КонецЕсли;
	
	// ОБЩИЕ ПОЛЯ НАЛОЖЕНИЯ ОГРАНИЧЕНИЙ
	ПоляОграничений = Новый Соответствие;
	ПоляОграничений.Вставить("ПланыОбмена", "Ссылка,ВерсияДанных,ПометкаУдаления,НомерОтправленного,НомерПринятого");
	ПоляОграничений.Вставить("Справочники", "Ссылка,ВерсияДанных,ПометкаУдаления,Предопределенный");
	ПоляОграничений.Вставить("Документы", "Ссылка,ВерсияДанных,Дата,Проведен,ПометкаУдаления");
	ПоляОграничений.Вставить("ЖурналыДокументов", "Ссылка,Дата,Проведен,ПометкаУдаления");
	ПоляОграничений.Вставить("ПланыВидовХарактеристик", "Ссылка,ВерсияДанных,ТипЗначения,ПометкаУдаления,Предопределенный");
	ПоляОграничений.Вставить("ПланыСчетов", "Ссылка,ВерсияДанных,Вид,Забалансовый,ПометкаУдаления,Предопределенный");
	ПоляОграничений.Вставить("ПланыВидовРасчета", "Ссылка,ВерсияДанных,ПометкаУдаления,Предопределенный");
	ПоляОграничений.Вставить("БизнесПроцессы", "Ссылка,ВерсияДанных,Номер,Дата,ВедущаяЗадача,ПометкаУдаления,Стартован,Завершен");
	ПоляОграничений.Вставить("Задачи", "Ссылка,ВерсияДанных,Номер,Дата,ПометкаУдаления,Наименование,Выполнена");
	
	// регистры
	ТипыРегистров = ПолучитьМассивТиповРегистров();
	ТипыПодчиненныхОбъектов = Новый Массив;
	ТипыПодчиненныхОбъектов.Добавить("Измерения");
	ТипыПодчиненныхОбъектов.Добавить("Ресурсы");
	ТипыПодчиненныхОбъектов.Добавить("Реквизиты");
	Для Каждого ТипРегистра Из ТипыРегистров Цикл
		Для Каждого ОбъектМетаданных Из Метаданные[ТипРегистра] Цикл
			
			СтрокаПолей = "";
			Для Каждого ИмяТипаПодчиненного Из ТипыПодчиненныхОбъектов Цикл
				Для Каждого ПодчиненныйОъект Из ОбъектМетаданных[ИмяТипаПодчиненного] Цикл
					СтрокаПолей = ?(ПустаяСтрока(СтрокаПолей), "", ",") + ПодчиненныйОъект.Имя;
				КонецЦикла;
			КонецЦикла;
			ПоляОграничений.Вставить(ТипРегистра+"."+ОбъектМетаданных.Имя, СтрокаПолей);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат Новый Структура("ТаблицаОбъектовМетаданных,ТаблицаВидовДоступа,ПоляОграничений", ТаблицаОбъектовМетаданных, ТаблицаВидовДоступа, ПоляОграничений);
	
КонецФункции

Функция ПолучитьМассивТиповРегистров()
	
	ТипыРегистров = Новый Массив;
	ТипыРегистров.Добавить("РегистрыСведений");
	ТипыРегистров.Добавить("РегистрыНакопления");
	ТипыРегистров.Добавить("РегистрыБухгалтерии");
	ТипыРегистров.Добавить("РегистрыРасчета");
	
	Возврат ТипыРегистров;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьПользователяИБПоИмени(ИмяПользователя) Экспорт
	
	НайденныйПользователь = Неопределено;
	МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого текПользователь Из МассивПользователей Цикл
		Если текПользователь.Имя = ИмяПользователя Тогда
			НайденныйПользователь = текПользователь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НайденныйПользователь;
	
КонецФункции

Функция ПолучитьОбъектМетаданныхПоИмени(ИмяОбъекта, ТипМетаданных) Экспорт
	
	Возврат Метаданные[ТипМетаданных].Найти(ИмяОбъекта);
	
КонецФункции

// Возвращает список пользователей текущей ИБ
//
// Параметры
//
// Возвращаемое значение:
//   СписокЗначений   - список пользователей ИБ: Значение - Имя пользователя; Представление - синоним, как он задан в конфигураторе
//
Функция ПолучитьСписокПользователейИБ() Экспорт
	
	РезСписок = Новый СписокЗначений;
	
	МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого Пользователь Из МассивПользователей Цикл
		РезСписок.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
	КонецЦикла;
	
	РезСписок.СортироватьПоПредставлению();
	
	Возврат РезСписок;
	
КонецФункции

// Возвращает список ролей текущей конфигурации
//
// Параметры
//
// Возвращаемое значение:
//   СписокЗначений   - список ролей: Значение - Имя роли; Представление - синоним, как он задан в конфигураторе
//
Функция ПолучитьСписокРолей() Экспорт
	
	РезСписок = Новый СписокЗначений;
	
	Для Каждого Роль Из Метаданные.Роли Цикл
		РезСписок.Добавить(Роль.Имя, Роль.Синоним);
	КонецЦикла;
	
	РезСписок.СортироватьПоПредставлению();
	
	Возврат РезСписок;
	
КонецФункции

Процедура ПроверитьВерсиюПлатформыПриЗапуске(Отказ) Экспорт
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ВерсияПлатформы = СистемнаяИнформация.ВерсияПриложения;
	
	Поз = Найти(ВерсияПлатформы, ".");
	СтаршийНомерРедакции = Число(Сред(ВерсияПлатформы, 1, Поз-1));
	ВерсияПлатформы = Сред(ВерсияПлатформы, Поз+1);
	Поз = Найти(ВерсияПлатформы, ".");
	МладшийНомерРедакции = Число(Сред(ВерсияПлатформы, 1, Поз-1));
	ВерсияПлатформы = Сред(ВерсияПлатформы, Поз+1);
	Поз = Найти(ВерсияПлатформы, ".");
	НомерРелиза = Число(Сред(ВерсияПлатформы, 1, Поз-1));
	НомерСборки = Число(Сред(ВерсияПлатформы, Поз+1));
	
	Если СтаршийНомерРедакции <> 8 ИЛИ МладшийНомерРедакции < 2 Тогда
		ТекстОшибки = "Не допустимая версия платформы 1С:Предприятия. Использование отчета невозможно";
		#Если ТолстыйКлиентУправляемоеПриложение ИЛИ ТонкийКлиент ИЛИ ВебКлиент Тогда
			ПоказатьОповещениеПользователя(ТекстОшибки);
		#Иначе
			Сообщить(ТекстОшибки, СтатусСообщения.ОченьВажное);
		#КонецЕсли
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ВерсияПлатформы8_3 = (МладшийНомерРедакции >= 3);
	ВерсияПлатформы8_3_3 = ( (МладшийНомерРедакции = 3 И НомерРелиза >= 3) ИЛИ МладшийНомерРедакции > 3 );
	ВерсияПлатформы8_3_6 = ( (МладшийНомерРедакции = 3 И НомерРелиза >= 6) ИЛИ МладшийНомерРедакции > 3 );
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ОТЧЕТА

Функция ПолучитьСтруктуруОбластейВывода(пМакет)
	
	Результат = Новый Структура;
	Результат.Вставить("Роли",         пМакет.ПолучитьОбласть("Роли"));
	Результат.Вставить("Заголовок",    пМакет.ПолучитьОбласть("Заголовок"));
	Результат.Вставить("ШапкаНачало",  пМакет.ПолучитьОбласть("ШапкаТаблицы|Начало"));
	Результат.Вставить("ШапкаПраво",   пМакет.ПолучитьОбласть("ШапкаТаблицы|Право"));
	Результат.Вставить("СтрокаНачало", пМакет.ПолучитьОбласть("СтрокаТаблицы|Начало"));
	Результат.Вставить("СтрокаПраво",  пМакет.ПолучитьОбласть("СтрокаТаблицы|Право"));
	Результат.Вставить("ПодвалНачало", пМакет.ПолучитьОбласть("ПодвалТаблицы|Начало"));
	Результат.Вставить("ПодвалПраво",  пМакет.ПолучитьОбласть("ПодвалТаблицы|Право"));
	Результат.Вставить("СтрокаНачалоБ", пМакет.ПолучитьОбласть("СтрокаТаблицыБезПрав|Начало"));
	Результат.Вставить("СтрокаПравоБ", пМакет.ПолучитьОбласть("СтрокаТаблицыБезПрав|Право"));
	
	Возврат Результат;
	
КонецФункции

Функция МетаданныеРолиПоСпискуИмен(МассивИмен, РолиСтрокой)
	
	МассивРолей = Новый Массив;
	Для Каждого ИмяРоли Из МассивИмен Цикл
		МассивРолей.Добавить(ПолучитьОбъектМетаданныхПоИмени(ИмяРоли, "Роли"));
	КонецЦикла;
	
	Для Каждого МетаРоль Из МассивРолей Цикл
		РолиСтрокой = РолиСтрокой + ", " + МетаРоль.Синоним;
	КонецЦикла;
	
	Возврат МассивРолей;
	
КонецФункции 

// Формирует табличный документ готового отчета
//
// Параметры
//
// Возвращаемое значение:
//   ТабличныйДокумент   - Сформированный отчет
//
//
Функция СформироватьМакетТаблицыОтчета(пМассивИменРолей, НеВыводитьОбъектБезПрав) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("КартаПолномочий");
	ОбластиМакета = ПолучитьСтруктуруОбластейВывода(Макет);
	СтрРоли = "";
	МассивРолей = МетаданныеРолиПоСпискуИмен(пМассивИменРолей, СтрРоли);
	
	// в самом начале выводим роли выбранного набора полномочий
	ОбластиМакета.Заголовок.Параметры.ВидМетаданных = "Роли";
	ТабДок.Вывести(ОбластиМакета.Заголовок);
	ТабДок.НачатьГруппуСтрок(, Ложь);
	ОбластиМакета.Роли.Параметры.Роли = Сред(СтрРоли, 3);
	ТабДок.Вывести(ОбластиМакета.Роли);
	ТабДок.ЗакончитьГруппуСтрок();
	
	// вывод прав на конфигурацию
	ОбластиМакета.Заголовок.Параметры.ВидМетаданных = "Права на конфигурацию";
	ТабДок.Вывести(ОбластиМакета.Заголовок);
	ТабДок.НачатьГруппуСтрок(,Ложь);
	ШапкуВывелиВОтчет = Ложь;
	ОписаниеТипаМетаданных = Новый Структура("Имя,Представление,ЗаголовокШапки", "", "", "Права на конфигурацию");
	ТаблицаВидовДоступа = ТаблицаПравКонфигурация();
	ВывестиШапкуПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОбластиМакета.ШапкаНачало, ОбластиМакета.ШапкаПраво, ОписаниеТипаМетаданных, ТаблицаВидовДоступа);
	
	ОбластиМакета.СтрокаНачало.Параметры.ТипОбъекта = "Права на конфигурацию";
	ТабДок.Вывести(ОбластиМакета.СтрокаНачало);
	Для Каждого СтрокаПраво Из ТаблицаВидовДоступа Цикл
		ЕстьПраво = "";
		Для Каждого МетаРоль Из МассивРолей Цикл
			Если ПравоДоступа(СтрокаПраво.ПравоДоступа, Метаданные, МетаРоль) Тогда
				ЕстьПраво = "+";
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ОбластиМакета.СтрокаПраво.Параметры.Право = ЕстьПраво;
		ТабДок.Присоединить(ОбластиМакета.СтрокаПраво);
	КонецЦикла;
	
	ВывестиПодвалПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОбластиМакета.ПодвалНачало, ОбластиМакета.ПодвалПраво, ТаблицаВидовДоступа);
	ТабДок.ЗакончитьГруппуСтрок();
	
	// Общие объекты конфигурации
	ТаблицыОписаний = ТаблицаПравОбщие();
	ТаблицаОбъектовМетаданных = ТаблицыОписаний.ТаблицаОбъектовМетаданных;
	ТаблицаВидовДоступа = ТаблицыОписаний.ТаблицаВидовДоступа;
	ПоляОграничений = ТаблицыОписаний.ПоляОграничений;
	ТипыРегистров = ПолучитьМассивТиповРегистров();
	
	СтруктураОтбора = Новый Структура("ВидМетаданных");
	СписокОбъектов = Новый СписокЗначений;
	
	Для Каждого ОписаниеТипаМетаданных Из ТаблицаОбъектовМетаданных Цикл
		
		СтруктураОтбора.ВидМетаданных = ОписаниеТипаМетаданных.Имя;
		МассивСтрок = ТаблицаВидовДоступа.НайтиСтроки(СтруктураОтбора);
		
		ОбластиМакета.Заголовок.Параметры.ВидМетаданных = ОписаниеТипаМетаданных.Представление;
		ТабДок.Вывести(ОбластиМакета.Заголовок);
		
		ТабДок.НачатьГруппуСтрок(,Ложь);
		ШапкуВывелиВОтчет = Ложь;
		
		СписокОбъектов.Очистить();
		Для Каждого ОбъектМетаданных Из Метаданные[ОписаниеТипаМетаданных.Имя] Цикл
			СписокОбъектов.Добавить(ОбъектМетаданных, "" + ОбъектМетаданных.Синоним + " (" + ОбъектМетаданных.Имя + ")");
			Если ОписаниеТипаМетаданных.Имя = "Подсистемы" И ОбъектМетаданных.Подсистемы.Количество() > 0 Тогда
				ДобавитьПодчиненныеОбъектыРекурсивно(СписокОбъектов, ОбъектМетаданных, "Подсистемы");
			КонецЕсли;
		КонецЦикла;
		СписокОбъектов.СортироватьПоПредставлению();
		
		//строки
		Для Каждого ЭлементСписка Из СписокОбъектов Цикл
			
			ЕстьХотяБыОдноПраво = Ложь;
			Для Каждого СтрокаПраво Из МассивСтрок Цикл
				Для Каждого МетаРоль Из МассивРолей Цикл
					Если ПравоДоступа(СтрокаПраво.ПравоДоступа, ЭлементСписка.Значение, МетаРоль) Тогда
						ЕстьХотяБыОдноПраво = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЕстьХотяБыОдноПраво Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НеВыводитьОбъектБезПрав И НЕ ЕстьХотяБыОдноПраво Тогда
				Продолжить;
			КонецЕсли;
			
			ОбластьНачало = ?(ЕстьХотяБыОдноПраво, ОбластиМакета.СтрокаНачало, ОбластиМакета.СтрокаНачалоБ);
			ОбластьПраво = ?(ЕстьХотяБыОдноПраво, ОбластиМакета.СтрокаПраво, ОбластиМакета.СтрокаПравоБ);
			ОбластьНачало.Параметры.ТипОбъекта = ЭлементСписка.Представление;
			
			ВывестиШапкуПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОбластиМакета.ШапкаНачало, ОбластиМакета.ШапкаПраво, ОписаниеТипаМетаданных, МассивСтрок); //шапка
			ТабДок.Вывести(ОбластьНачало);
			Для Каждого СтрокаПраво Из МассивСтрок Цикл
				
				ЕстьПраво = Ложь;
				ЕстьОграничение = Ложь;
				ЕстьБезОграничения = Ложь;
				Для Каждого МетаРоль Из МассивРолей Цикл
					
					// определение ограничений прав
					Если ПравоДоступа(СтрокаПраво.ПравоДоступа, ЭлементСписка.Значение, МетаРоль) Тогда
						ЕстьПраво = Истина;
						Если СтрокаПраво.ПоддерживаетОграничения Тогда
							Если ТипыРегистров.Найти(ОписаниеТипаМетаданных.Имя) = Неопределено Тогда
								ПарамДост = ПараметрыДоступа(СтрокаПраво.ПравоДоступа, ЭлементСписка.Значение, ПоляОграничений[ОписаниеТипаМетаданных.Имя], МетаРоль);
							Иначе
								ПарамДост = ПараметрыДоступа(СтрокаПраво.ПравоДоступа, ЭлементСписка.Значение, ПоляОграничений[ОписаниеТипаМетаданных.Имя+"."+ЭлементСписка.Значение.Имя], МетаРоль);
							КонецЕсли;
							Если ПарамДост.ОграничениеУсловием Тогда
								ЕстьОграничение = Истина;
							Иначе
								ЕстьБезОграничения = Истина;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
				Если СтрокаПраво.ПоддерживаетОграничения И ЕстьОграничение И НЕ ЕстьБезОграничения Тогда
					ОбластьПраво.ТекущаяОбласть.ЦветФона = WebЦвета.СветлоСерый;
				Иначе
					ОбластьПраво.ТекущаяОбласть.ЦветФона = WebЦвета.Белый;
				КонецЕсли;
				ОбластьПраво.Параметры.Право = ?(ЕстьПраво, "+", "");
				ТабДок.Присоединить(ОбластьПраво);
				
			КонецЦикла;
			
		КонецЦикла;
		
		ВывестиПодвалПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОбластиМакета.ПодвалНачало, ОбластиМакета.ПодвалПраво, МассивСтрок); //подвал
		ТабДок.ЗакончитьГруппуСтрок();
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Процедура ДобавитьПодчиненныеОбъектыРекурсивно(СписокОбъектов, Знач ОбъектМетаданных, Знач ИмяПоля)
	
	Для Каждого ПодчиненныйОбъектМетаданных Из ОбъектМетаданных[ИмяПоля] Цикл
		СписокОбъектов.Добавить(ПодчиненныйОбъектМетаданных, "" + ПодчиненныйОбъектМетаданных.Синоним + " (" + ПодчиненныйОбъектМетаданных.Имя + ")");
		Если ПодчиненныйОбъектМетаданных[ИмяПоля].Количество() > 0 Тогда
			ДобавитьПодчиненныеОбъектыРекурсивно(СписокОбъектов, ПодчиненныйОбъектМетаданных, ИмяПоля);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиШапкуПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОблШапкаНачало, ОблШапкаПраво, ОписаниеТипаМетаданных, МассивСтрок)
	
	Если ШапкуВывелиВОтчет Тогда
		Возврат;
	КонецЕсли;
	
	ОблШапкаНачало.Параметры.ЗаголовокШапки = ОписаниеТипаМетаданных.ЗаголовокШапки;
	ТабДок.Вывести(ОблШапкаНачало);
	Для Каждого СтрокаПраво Из МассивСтрок Цикл
		ОблШапкаПраво.Параметры.ПравоДоступа = СтрокаПраво.Представление;
		ТабДок.Присоединить(ОблШапкаПраво);
	КонецЦикла;
	
	ШапкуВывелиВОтчет = Истина;
	
КонецПроцедуры

Процедура ВывестиПодвалПоТипуМетаданных(ШапкуВывелиВОтчет, ТабДок, ОблПодвалНачало, ОблПодвалПраво, МассивСтрок)
	
	Если ШапкуВывелиВОтчет Тогда
		ТабДок.Вывести(ОблПодвалНачало);
		Для Каждого СтрокаПраво Из МассивСтрок Цикл
			ТабДок.Присоединить(ОблПодвалПраво);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// РАБОТА С XML

// Создание и открытие на запись потока данных xml
//
// Параметры
//  ПутьКФайлу  - Строка - Полный путь к файлу xml для записи
//
// Возвращаемое значение:
//   ЗаписьXML   - Созданный файл xml, открытый для записи
//
Функция СоздатьФайлXMLДляЗаписи(ПутьКФайлу) Экспорт
	
	ФайлXML = Новый Файл(ПутьКФайлу);
	Если (ФайлXML.Существует()) Тогда
		УдалитьФайлы(ФайлXML.ПолноеИмя);
	Иначе
		СоздатьКаталог(ФайлXML.Путь);
	КонецЕсли;
	
	ФайлXML = Новый ЗаписьXML;
	Попытка
		ФайлXML.ОткрытьФайл(ПутьКФайлу);
		ФайлXML.ЗаписатьОбъявлениеXML();
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	Если ФайлXML = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ФайлXML;
	
КонецФункции

// Добавление одного элемента xml
//
// Параметры
//  ФайлXML  - ЗаписьXML - Инициированный файл xml, открытый на запись
//  ИмяЭлемента  - Строка - Имя для нового узла xml, в которое будет
//                 записано значение
//  ЗначениеЭлемента  - Произвольный - Записываемое значение в новый узел xml.
//                 Поддерживаются только типы значений, сериализуемые в xml
//  ЗаписыватьПустоеЗначение  - Булево - Признак необходимости записи значения, даже если оно не заполнено.
//                 (пустая строка или нулевое число). Значение по умолчанию: Ложь
//
Процедура ДобавитьЭлементВXMLФайл(ФайлXML, ИмяЭлемента, ЗначениеЭлемента, ЗаписыватьПустоеЗначение = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ЗначениеЭлемента) И НЕ ЗаписыватьПустоеЗначение Тогда
		Возврат;
	КонецЕсли;
	
	ТипЗначенияXML = XMLТипЗнч(ЗначениеЭлемента);
	Попытка
		URIПространстваИмен = ТипЗначенияXML.URIПространстваИмен;
		ИмяТипа = ТипЗначенияXML.ИмяТипа;
	Исключение
		Возврат;
	КонецПопытки;
	
	ФайлXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	ФайлXML.ЗаписатьАтрибут("Тип", URIПространстваИмен, ИмяТипа);
	ФайлXML.ЗаписатьАтрибут("Значение", XMLСтрока(ЗначениеЭлемента));
	ФайлXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ДобавитьТаблицуЗначенийВXML(ФайлXML, ИмяЭлемента, ЭлементТаблица, ЗаписыватьПустоеЗначение = Ложь) Экспорт
	
	ЭлементТаблица = Новый ТаблицаЗначений; // УДАЛИТЬ !!!
	
	Если ЭлементТаблица.Количество() = 0 И НЕ ЗаписыватьПустоеЗначение Тогда
		Возврат;
	КонецЕсли;
	
	ФайлXML.ЗаписатьНачалоЭлемента(ИмяЭлемента);
	ФайлXML.ЗаписатьАтрибут("ТипПроизвольнойКоллекции", "ТаблицаЗначений");
	
	ФайлXML.ЗаписатьНачалоЭлемента("Колонки");
	
	ВсегоКолонок = ЭлементТаблица.Колонки.Количество();
	Для Инд = 0 По ВсегоКолонок - 1 Цикл
		//ФайлXML.ЗаписатьАтрибут("Кол"+, "ТаблицаЗначений");
	КонецЦикла;
	
	ФайлXML.ЗаписатьКонецЭлемента();
	
	ФайлXML.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Процедура ДобавитьПроизвольноеЗначениеВXML(ФайлXML, ИмяЭлемента, ЗначениеЭлемента, ЗаписыватьПустоеЗначение = Ложь) Экспорт
	
	Если ТипЗнч(ЗначениеЭлемента) = Тип("ТаблицаЗначений") Тогда
		ДобавитьТаблицуЗначенийВXML(ФайлXML, ИмяЭлемента, ЗначениеЭлемента, ЗаписыватьПустоеЗначение);
	Иначе
		ДобавитьЭлементВXMLФайл(ФайлXML, ИмяЭлемента, ЗначениеЭлемента, ЗаписыватьПустоеЗначение);
	КонецЕсли;
	
КонецПроцедуры
