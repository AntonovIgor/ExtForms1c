
///////////////////////////////////////////////////////////////////////////////////////////////
// РАБОТА С ТАБЛИЧНЫМ ДОКУМЕНТОМ

// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
//
Функция ИнициализироватьТабличныйДокумент()
	
	ТабДок = ЭлементыФормы.ПолеОтчета;
	ТабДок.Очистить();
	ТабДок.ИмяПараметровПечати = "ПараметрыПечати_ЭкспрессПроверкаВеденияУчета";
	ТабДок.ИмяСохраненияПоложенияОкна = "ПараметрыПоложенияОкна_ЭкспрессПроверкаВеденияУчета";
	ТабДок.ОтображатьГруппировки = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
//
Функция СформироватьОписаниеОшибки(РазделОшибок, Подпункт, ПараметрыСообщения = Неопределено)
	
	Результат = "";
	
	Если РазделОшибок = 1 Тогда
		
		Если Подпункт = 1 Тогда
			ТекстОшибки = НСтр("ru = 'Наименование физического лица: ""%1"", а в регистре сведений задано ФИО: ""%2""'");
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
																				ПараметрыСообщения.НаименованиеФизлица,
																				ПараметрыСообщения.ФИОФизлица);
		ИначеЕсли Подпункт = 2 Тогда
			Результат = НСтр("ru = 'Пустое наименование физического лица'");
		ИначеЕсли Подпункт = 3 Тогда
			Результат = НСтр("ru = 'Не заполнена фамилия'");
		ИначеЕсли Подпункт = 4 Тогда
			Результат = НСтр("ru = 'Не заполнено имя'");
		КонецЕсли;
		
	ИначеЕсли РазделОшибок = 2 Тогда
		
		Если Подпункт = 1 Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена контактная информация: %1'");
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
																				ПараметрыСообщения.ВидАдреса);
		ИначеЕсли Подпункт = 2 Тогда
			ТекстОшибки = НСтр("ru = '%1: Почтовый индекс задан неверно или адрес заполнен не в формате КЛАДР. Почтовый индекс должен состоять из 6 цифр и не содержать пробелов'");
			Результат = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
																				ПараметрыСообщения.ВидАдреса);
		КонецЕсли;
		
	ИначеЕсли РазделОшибок = 3 Тогда
		
		Если Подпункт = 1 ИЛИ Подпункт = 2 Тогда
			Результат = ПараметрыСообщения.ТекстСообщения;
		КонецЕсли;
		
	ИначеЕсли РазделОшибок = 4 Тогда
		
		Если Подпункт = 1 Тогда
			Результат = НСтр("ru = 'Не заполнены сведения о документе, удостоверяющем личность, или не указан вид документа'");
		ИначеЕсли Подпункт = 2 Тогда
			Результат = ПараметрыСообщения.ТекстСообщения;
		КонецЕсли;
		
	ИначеЕсли РазделОшибок = 5 Тогда
		
		Если Подпункт = 1 Тогда
			Результат = НСтр("ru = 'Не заполнены сведения о стаже работы на севере'");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	// Выполняем проверки:
	// 1. Заполненность необходимых персональных данных работников
	//  - Соответсвие ФИО наименованию, заполненность того и другого
	//  - Наличие трех адресов: ЮрАдресФизЛица, ФактАдресФизЛица, ИнформАдресФизЛица
	//    - Адреса должны быть формата КЛАДР, а не произвольно заданные
	//    - Индекс - строго 6 цифр
	//  - Наличие паспортных данных с видом дкоумента ИМНС21 (паспорт гражданина РФ)
	//    - Номер паспорта - строго 6 цифр
	//    - Серия паспорта - две пары цифр, разделенных одним пробелом
	//    - Заполнены остальные паспортные данные
	//  - Северный стаж
	// 2. Установленные плановые начисления сотрудников
	
	Если НЕ ЗначениеЗаполнено(ДатаОтчета) Тогда
		Предупреждение(НСтр("ru = 'Не указана дата отчёта.'"), 30, НСтр("ru = 'Ошибка!'"));
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаОтчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОтчета));
	Запрос.Текст = ТекстЗапросаПерсональныеДанныеФизлиц();
	Выборка = Запрос.Выполнить().Выбрать();
	
	// Формирование и вывод результатов анализа
	мТаблицаРезультатаПроверки.Очистить();
	ВидПаспорт = Справочники.ДокументыУдостоверяющиеЛичность.ИМНС21;
	
	// Анализ данных и сбор статистики ошибок
	Пока Выборка.Следующий() Цикл
		
		// 1. ФИО
		ФИОизРегистра = "" + Выборка.Фамилия + " " + Выборка.Имя + ?(ПустаяСтрока(Выборка.Отчество), "", " " + Выборка.Отчество);
		Если Выборка.НаименованиеФизлица <> ФИОизРегистра Тогда
			ПараметрыСообщения = Новый Структура("НаименованиеФизлица,ФИОФизлица", Выборка.НаименованиеФизлица, ФИОизРегистра);
			ДобавитьСтрокуВТаблицуРезультата(1, Выборка.Физлицо, СформироватьОписаниеОшибки(1, 1, ПараметрыСообщения));
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Выборка.НаименованиеФизлица) Тогда
			ДобавитьСтрокуВТаблицуРезультата(1, Выборка.Физлицо, СформироватьОписаниеОшибки(1, 2));
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Выборка.Фамилия) Тогда
			ДобавитьСтрокуВТаблицуРезультата(1, Выборка.Физлицо, СформироватьОписаниеОшибки(1, 3));
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Выборка.Имя) Тогда
			ДобавитьСтрокуВТаблицуРезультата(1, Выборка.Физлицо, СформироватьОписаниеОшибки(1, 4));
		КонецЕсли;
		
		// 2. Контакты
		ПараметрыСообщения = Новый Структура("ВидАдреса", "Адрес по прописке физического лица");
		Если НЕ ЗначениеЗаполнено(Выборка.ЮрАдрес) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 1, ПараметрыСообщения));
		ИначеЕсли НЕ ПроверитьПочтовыйИндекс(Выборка.ЮрАдресИндекс) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 2, ПараметрыСообщения));
		КонецЕсли;
		
		ПараметрыСообщения.ВидАдреса = "Адрес проживания физического лица";
		Если НЕ ЗначениеЗаполнено(Выборка.ФактАдрес) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 1, ПараметрыСообщения));
		ИначеЕсли НЕ ПроверитьПочтовыйИндекс(Выборка.ФактАдресИндекс) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 2, ПараметрыСообщения));
		КонецЕсли;
		
		ПараметрыСообщения.ВидАдреса = "Адрес для информирования физического лица";
		Если НЕ ЗначениеЗаполнено(Выборка.ИнфАдрес) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 1, ПараметрыСообщения));
		ИначеЕсли НЕ ПроверитьПочтовыйИндекс(Выборка.ИнфАдресИндекс) Тогда
			ДобавитьСтрокуВТаблицуРезультата(2, Выборка.Физлицо, СформироватьОписаниеОшибки(2, 2, ПараметрыСообщения));
		КонецЕсли;
		
		// 3. Коды
		ТекстСообщения = "";
		Если НЕ ИННСоответствуетТребованиям(Выборка.ИНН, ТекстСообщения) Тогда
			ПараметрыСообщения = Новый Структура("ТекстСообщения", ТекстСообщения);
			ДобавитьСтрокуВТаблицуРезультата(3, Выборка.Физлицо, СформироватьОписаниеОшибки(3, 1, ПараметрыСообщения));
		КонецЕсли;
		
		ТекстСообщения = "";
		Если НЕ СтраховойНомерПФРСоответствуетТребованиям(Выборка.СНИЛС, ТекстСообщения) Тогда
			ПараметрыСообщения = Новый Структура("ТекстСообщения", ТекстСообщения);
			ДобавитьСтрокуВТаблицуРезультата(3, Выборка.Физлицо, СформироватьОписаниеОшибки(3, 2, ПараметрыСообщения));
		КонецЕсли;
		
		// 4. Документ, удостоверяющий личность
		
		Если НЕ Выборка.ДокументЗаполнен Тогда
			ДобавитьСтрокуВТаблицуРезультата(4, Выборка.Физлицо, СформироватьОписаниеОшибки(4, 1));
		ИначеЕсли Выборка.ДокументВид = ВидПаспорт Тогда
			ПараметрыПаспорт = Новый Структура("ДокументСерия,ДокументНомер,ДокументДатаВыдачи,ДокументКемВыдан,ДокументКодПодразделения,ДокументДатаРегистрации",
				НСтр("ru = 'Серия паспорта'"),
				НСтр("ru = 'Номер паспорта'"),
				НСтр("ru = 'Дата выдачи документа'"),
				НСтр("ru = 'Орган, выдавший документ'"),
				НСтр("ru = 'Код подразделения'"),
				НСтр("ru = 'Дата регистрации по месту жительства'"));
			ТекстСообщения = "";
			Если НЕ ПроверитьПаспортныеДанные(Выборка, ПараметрыПаспорт, ТекстСообщения) Тогда
				ПараметрыСообщения = Новый Структура("ТекстСообщения", ТекстСообщения);
				ДобавитьСтрокуВТаблицуРезультата(4, Выборка.Физлицо, СформироватьОписаниеОшибки(4, 2, ПараметрыСообщения));
			КонецЕсли;
		КонецЕсли;
		
		// 5. Северный стаж
		
		Если НЕ ЗначениеЗаполнено(Выборка.СеверныйСтажПериодЗаписи) ИЛИ НЕ ЗначениеЗаполнено(Выборка.СеверныйСтажПорядокНачисления) Тогда
			ДобавитьСтрокуВТаблицуРезультата(5, Выборка.Физлицо, СформироватьОписаниеОшибки(5, 1));
		КонецЕсли;
		
	КонецЦикла;
	
	// Формирование печатной формы отчета
	
	ТабДок = ИнициализироватьТабличныйДокумент();
	Макет = ПолучитьМакет("РезультатыПроверки");
	ОбластиЗаголовков = Новый Соответствие;
	Для Сч = 1 По мУровнейЗаголовковОтчета Цикл
		ОбластиЗаголовков.Вставить(Сч, Макет.ПолучитьОбласть("Заголовок"+Сч));
	КонецЦикла;
	ОблШапка = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОблСтрока = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОблПодвал = Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	мТаблицаРезультатаПроверки.Сортировать("РазделОтчета1,РазделОтчета2,ФизическоеЛицо");
	
	Для Каждого КлючИЗначение1 Из мЗаголовкиПервогоУровня Цикл
		
		НомерЗаголовка1 = КлючИЗначение1.Ключ;
		Если мТаблицаРезультатаПроверки.Найти(НомерЗаголовка1, "РазделОтчета1") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОблЗаг = ОбластиЗаголовков[1];
		ОблЗаг.Параметры.Заголовок = КлючИЗначение1.Значение;
		ТабДок.Вывести(ОблЗаг);
		
		Для Каждого КлючИЗначение2 Из мЗаголовкиВторогоУровня Цикл
			
			НомерЗаголовка2 = КлючИЗначение2.Ключ;
			СтрокиОшибок = мТаблицаРезультатаПроверки.НайтиСтроки(Новый Структура("РазделОтчета1,РазделОтчета2", НомерЗаголовка1, НомерЗаголовка2));
			Если СтрокиОшибок.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ОблЗаг = ОбластиЗаголовков[2];
			ОблЗаг.Параметры.Заголовок = "" + КлючИЗначение2.Значение + " (" + СтрокиОшибок.Количество() + " ошибок)";
			ТабДок.Вывести(ОблЗаг);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			ТабДок.Вывести(ОблШапка);
			Для Каждого СтрокаОшибка Из СтрокиОшибок Цикл
				ОблСтрока.Параметры.Заполнить(СтрокаОшибка);
				ТабДок.Вывести(ОблСтрока);
			КонецЦикла;
			ТабДок.Вывести(ОблПодвал);
			ТабДок.ЗакончитьГруппуСтрок();
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ДатаОтчета = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	
	ТекстЗаголовка = НСтр("ru = 'Экспресс-проверка ведения учёта в ЗУП, ред. 2.5 (v%1)'");
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Версия());
	
	ЭтаФорма.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры
